AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Resources:

  LambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri:
        Bucket: !Ref CodeBucket
        Key: !Ref CodeKey
      Handler: !Ref HandlerPath
      Role: !GetAtt
        - LambdaExecutionRole
        - Arn
      Runtime: java8
      Events:
        CreateActivity:
          Type: Api
          Properties:
            Method: POST
            Path: /createactivity
        DescribeActivity:
          Type: Api
          Properties:
            Method: POST
            Path: /describeactivity
        DescribeActivities:
          Type: Api
          Properties:
            Method: POST
            Path: /describeactivities
        UpdateActivity:
          Type: Api
          Properties:
            Method: POST
            Path: /updateactivity
        DeleteActivity:
          Type: Api
          Properties:
            Method: POST
            Path: /deleteactivity
        CreateActivitySession:
          Type: Api
          Properties:
            Method: POST
            Path: /createactivitysession
        DescribeActivitySession:
          Type: Api
          Properties:
            Method: POST
            Path: /describeactivitysession
        DescribeActivitySessions:
          Type: Api
          Properties:
            Method: POST
            Path: /describeactivitysessions
        UpdateActivitySession:
          Type: Api
          Properties:
            Method: POST
            Path: /updateactivitysession
        DeleteActivitySession:
          Type: Api
          Properties:
            Method: POST
            Path: /deleteactivitysession
      Timeout: 30
      MemorySize: 384

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - !Ref DynamoDBAccess
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'

  ActivityTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: ActivityTable
      AttributeDefinitions:
        - AttributeName: ActivityId
          AttributeType: S
      KeySchema:
        - AttributeName: ActivityId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'

  ActivitySessionTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: ActivitySessionTable
      AttributeDefinitions:
        - AttributeName: ActivitySessionId
          AttributeType: S
        - AttributeName: ActivityId
          AttributeType: S
      KeySchema:
        - AttributeName: ActivitySessionId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
      GlobalSecondaryIndexes:
        - IndexName: "ActivityId-Index"
          KeySchema:
            - AttributeName: "ActivityId"
              KeyType: 'HASH'
          Projection:
            ProjectionType: 'ALL'
          ProvisionedThroughput:
            ReadCapacityUnits: '5'
            WriteCapacityUnits: '5'

  DynamoDBAccess:
    Properties:
      Path: /
      Description: Policy that allows the reading and writing to DDB tables.
      PolicyDocument:
        Statement:
          - Action:
              - 'dynamodb:PutItem'
            Effect: Allow
            Resource:
              - !Join
                - /
                - - !Join
                    - ':'
                    - - 'arn:aws:dynamodb'
                      - !Ref 'AWS::Region'
                      - !Ref 'AWS::AccountId'
                      - table
                  - !Ref ActivityTable
        Version: 2012-10-17
    Type: 'AWS::IAM::ManagedPolicy'

Parameters:
  CodeBucket:
    Type: String
  CodeKey:
    Type: String
  HandlerPath:
    Type: String
